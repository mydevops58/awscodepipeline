AWSTemplateFormatVersion: '2010-09-09'
Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: demo-fargate-cluster

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: ecsTaskExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - "*"
                Resource: "*"

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: demo-task
      RequiresCompatibilities: [FARGATE]
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: demo-nodejs-app
          Image: 150605664329.dkr.ecr.us-east-1.amazonaws.com/demo-nodejs-app
          PortMappings:
            - ContainerPort: 3000

  Service:
    Type: AWS::ECS::Service
    DependsOn: ALBListener
    Properties:
      ServiceName: demo-nodejs-service
      Cluster: !Ref Cluster
      LaunchType: FARGATE
      DesiredCount: 1
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: ["subnet-0b20525b5d12da3cb", "subnet-0c1a2f054f4f6dcd6"]
          SecurityGroups: ["sg-0280464520ab2ed4d"]
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerName: demo-nodejs-app
          ContainerPort: 3000

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: demo-lb
      Subnets: ["subnet-0b20525b5d12da3cb", "subnet-0c1a2f054f4f6dcd6"]
      SecurityGroups: ["sg-0280464520ab2ed4d"]
      Scheme: internet-facing

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: demo-tg
      Port: 80
      Protocol: HTTP
      VpcId: vpc-0192c612638c021be
      TargetType: ip
      HealthCheckPath: /

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      